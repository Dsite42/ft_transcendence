services:
  rabbitmq:
    image: 'rabbitmq:latest'
    hostname: 'rabbitmq'
  matchmaker:
    hostname: matchmaker
    init: true
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file: .env
    build: matchmaker
    ports:
      - "8765:8765"
  game:
    hostname: game
    init: true
    build: game
    ports:
      - ${PORT_RANGE}:${PORT_RANGE}
    environment:
      RPC_HOST: ${RPC_HOST}
      GAME_HOST: ${GAME_HOST}
      PORT_RANGE: ${PORT_RANGE}
      JWT_SECRET: ${JWT_SECRET}
  web:
    container_name: web
    hostname: web
    build: web
    environment:
      - GAME_HOST=${GAME_HOST}
    env_file:
      - .env
    depends_on:
      - postgres
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - "80:80"
    volumes:
    - ./docker/nginx.conf:/etc/nginx/nginx.conf
    - ./web/static:/app/static
    depends_on:
      - web
      - matchmaker
      - game
  postgres:
    container_name: postgres
    hostname: postgres
    image: 'postgres:latest'
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file: .env
    volumes:
      - ./docker/postgres.sh:/docker-entrypoint-initdb.d/init.sh
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
